{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/chianc/Documentos/Biblioteca/react-biblioteca/src/ListaLivro.js\";\nimport React from 'react';\nimport LivroForm from './LivroForm';\nexport default class ListaLivro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      livros: props.livros,\n      mode: 'view',\n      current: null\n    };\n  }\n\n  render() {\n    if (this.state.mode === 'view') {\n      const livros = this.state.livros.map((q, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Nome do livro: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), q.statement, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Autor: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), q.autor, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Link para Download: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: q.imagem,\n          target: \"_blank\",\n          children: [q.imagem, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [livros, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addLivro(),\n          children: \"Adicionar Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(LivroForm, {\n        livro: this.state.livros[this.state.current],\n        onUpdate: livro => this.updateChanges(livro),\n        onCancel: () => this.cancelChanges()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  addLivro() {\n    const newLivro = {\n      statement: '',\n      autor: '',\n      descricao: '',\n      imagem: ''\n    };\n    const livros = [...this.state.livros, newLivro];\n    this.setState({\n      livros,\n      mode: 'add',\n      current: livros.length - 1\n    });\n  }\n\n  removeLivro(index) {\n    const livros = [...this.state.livros];\n    livros.splice(index, 1);\n    console.log(livros.splice(index, 1));\n    this.setState({\n      livros\n    });\n  }\n\n  updateChanges(livro) {\n    const livros = [...this.state.livros];\n    livros[this.state.current] = { ...livro\n    };\n    this.setState({\n      mode: 'view',\n      livros\n    });\n  }\n\n  cancelChanges() {\n    if (this.state.mode === 'add') {\n      this.removeLivro(this.state.livros.length - 1);\n      console.log(this.state.livros.length - 1);\n    }\n\n    this.setState({\n      mode: 'view'\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/chianc/Documentos/Biblioteca/react-biblioteca/src/ListaLivro.js"],"names":["React","LivroForm","ListaLivro","Component","constructor","props","state","livros","mode","current","render","map","q","i","statement","autor","imagem","addLivro","livro","updateChanges","cancelChanges","newLivro","descricao","setState","length","removeLivro","index","splice","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LivroForm from './LivroForm'\n\nexport default class ListaLivro extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      livros: props.livros,\n      mode: 'view',\n      current: null\n    }\n  }\n\n  render() {\n    if (this.state.mode === 'view') {\n      const livros = this.state.livros.map((q, i) => (\n        <p key={i}>\n          <b>Nome do livro: </b>\n          {q.statement}\n          <br />\n          <b>Autor: </b>\n          {q.autor}\n          <br />\n          <b>Link para Download: </b>\n          <a href={q.imagem} target=\"_blank\">{q.imagem} </a> \n        </p>\n      ))\n      return (\n        <>\n          {livros}\n          <button onClick={() => this.addLivro()}>Adicionar Novo</button>\n        </>\n      )\n    } else {\n      return (\n        <LivroForm\n          livro={this.state.livros[this.state.current]}\n          onUpdate={(livro) => this.updateChanges(livro)}\n          onCancel={() => this.cancelChanges()}\n        />\n      )\n    }\n  }\n\n  addLivro() {\n    const newLivro = { statement: '', autor: '', descricao: '', imagem:'' }\n    const livros = [...this.state.livros, newLivro]\n    this.setState({\n      livros,\n      mode: 'add',\n      current: livros.length - 1\n    })\n  }\n\n  removeLivro(index) {\n    const livros = [...this.state.livros]\n    livros.splice(index, 1)\n    console.log(livros.splice(index, 1))\n    this.setState({ livros })\n  }\n\n  updateChanges(livro) {\n    const livros = [...this.state.livros]\n    livros[this.state.current] = { ...livro }\n    this.setState({ mode: 'view', livros })\n  }\n\n  cancelChanges() {\n    if (this.state.mode === 'add') {\n      this.removeLivro(this.state.livros.length - 1)\n      console.log(this.state.livros.length - 1)\n    }\n    this.setState({ mode: 'view' })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}